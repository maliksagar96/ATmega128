
GRP_gate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000018a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001de  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003c3  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000119  00000000  00000000  00000647  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000019d  00000000  00000000  00000760  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b3  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  00000b07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	46 d0       	rcall	.+140    	; 0x126 <main>
  9a:	75 c0       	rjmp	.+234    	; 0x186 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <open_gate>:
	DDRB = 0x00;
}

void open_gate() {
	
	PORTE = (1 << dir1);
  9e:	80 e2       	ldi	r24, 0x20	; 32
  a0:	83 b9       	out	0x03, r24	; 3
	PORTE &=~ (1 << dir2);
  a2:	1c 98       	cbi	0x03, 4	; 3
	PORTE = (1 << PWM_pin);
  a4:	88 e0       	ldi	r24, 0x08	; 8
  a6:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	2f ef       	ldi	r18, 0xFF	; 255
  aa:	83 ed       	ldi	r24, 0xD3	; 211
  ac:	90 e3       	ldi	r25, 0x30	; 48
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <open_gate+0x10>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <open_gate+0x1a>
  b8:	00 00       	nop
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	83 ed       	ldi	r24, 0xD3	; 211
  be:	90 e3       	ldi	r25, 0x30	; 48
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <open_gate+0x22>
  c8:	00 c0       	rjmp	.+0      	; 0xca <open_gate+0x2c>
  ca:	00 00       	nop
  cc:	2f ef       	ldi	r18, 0xFF	; 255
  ce:	89 e6       	ldi	r24, 0x69	; 105
  d0:	98 e1       	ldi	r25, 0x18	; 24
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	80 40       	sbci	r24, 0x00	; 0
  d6:	90 40       	sbci	r25, 0x00	; 0
  d8:	e1 f7       	brne	.-8      	; 0xd2 <open_gate+0x34>
  da:	00 c0       	rjmp	.+0      	; 0xdc <open_gate+0x3e>
  dc:	00 00       	nop

	_delay_ms(2000);
	_delay_ms(2000);
	_delay_ms(1000);
	PORTE &=~ (1<<PWM_pin);
  de:	1b 98       	cbi	0x03, 3	; 3
  e0:	08 95       	ret

000000e2 <close_gate>:
		
} 

void close_gate() {

	PORTE = (1 << dir2);
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	83 b9       	out	0x03, r24	; 3
	PORTE &=~ (1 << dir1);
  e6:	1d 98       	cbi	0x03, 5	; 3
	PORTE = (1 << PWM_pin);
  e8:	88 e0       	ldi	r24, 0x08	; 8
  ea:	83 b9       	out	0x03, r24	; 3
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	83 ed       	ldi	r24, 0xD3	; 211
  f0:	90 e3       	ldi	r25, 0x30	; 48
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <close_gate+0x10>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <close_gate+0x1a>
  fc:	00 00       	nop
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	83 ed       	ldi	r24, 0xD3	; 211
 102:	90 e3       	ldi	r25, 0x30	; 48
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <close_gate+0x22>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <close_gate+0x2c>
 10e:	00 00       	nop
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	89 e6       	ldi	r24, 0x69	; 105
 114:	98 e1       	ldi	r25, 0x18	; 24
 116:	21 50       	subi	r18, 0x01	; 1
 118:	80 40       	sbci	r24, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <close_gate+0x34>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <close_gate+0x3e>
 120:	00 00       	nop
	
	_delay_ms(2000);
	_delay_ms(2000);
	_delay_ms(1000);
	PORTE &=~ (1<<PWM_pin);
 122:	1b 98       	cbi	0x03, 3	; 3
 124:	08 95       	ret

00000126 <main>:
    while (1) 
    {
	//	a++;
			
		if(test_variable) {
				open_gate();
 126:	bb df       	rcall	.-138    	; 0x9e <open_gate>
 128:	2f ef       	ldi	r18, 0xFF	; 255
 12a:	83 ed       	ldi	r24, 0xD3	; 211
 12c:	90 e3       	ldi	r25, 0x30	; 48
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	80 40       	sbci	r24, 0x00	; 0
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0x8>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0x12>
 138:	00 00       	nop
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	83 ed       	ldi	r24, 0xD3	; 211
 13e:	90 e3       	ldi	r25, 0x30	; 48
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <main+0x1a>
 148:	00 c0       	rjmp	.+0      	; 0x14a <main+0x24>
 14a:	00 00       	nop
 14c:	2f ef       	ldi	r18, 0xFF	; 255
 14e:	83 ed       	ldi	r24, 0xD3	; 211
 150:	90 e3       	ldi	r25, 0x30	; 48
 152:	21 50       	subi	r18, 0x01	; 1
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <main+0x2c>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0x36>
 15c:	00 00       	nop
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	83 ed       	ldi	r24, 0xD3	; 211
 162:	90 e3       	ldi	r25, 0x30	; 48
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x3e>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x48>
 16e:	00 00       	nop
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	83 ed       	ldi	r24, 0xD3	; 211
 174:	90 e3       	ldi	r25, 0x30	; 48
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x50>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x5a>
 180:	00 00       	nop
				_delay_ms(2000);
				_delay_ms(2000);
				_delay_ms(2000);
				_delay_ms(2000);
				_delay_ms(2000);
				close_gate();	
 182:	af df       	rcall	.-162    	; 0xe2 <close_gate>
 184:	d0 cf       	rjmp	.-96     	; 0x126 <main>

00000186 <_exit>:
 186:	f8 94       	cli

00000188 <__stop_program>:
 188:	ff cf       	rjmp	.-2      	; 0x188 <__stop_program>
